;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-xiangshangjiantouarrowup" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M880.101759 945.489902c18.020155 17.819854 47.143649 17.819854 65.097286 0 17.953637-17.753339 17.953637-46.610574 0-64.429405L544.042085 485.10649c-18.020155-17.819854-47.077131-17.819854-65.097286 0L77.787839 881.059474c-17.953637 17.819854-18.020155 46.610574 0 64.429405s47.210166 17.819854 65.097286 0.066515l368.641064-350.141612L880.101759 945.489902 880.101759 945.489902z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-gouwuche" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M482.456933 728.876446c-33.074645 0-59.898672 26.834158-59.898672 59.892065 0 33.102932 26.824028 59.903322 59.898672 59.903322 33.075668 0 59.889462-26.800389 59.889462-59.903322C542.347419 755.711628 515.533625 728.876446 482.456933 728.876446z"  ></path>' +
    '' +
    '<path d="M768.717368 728.876446c-33.081808 0-59.905836 26.834158-59.905836 59.892065 0 33.102932 26.824028 59.903322 59.905836 59.903322 33.069528 0 59.888439-26.800389 59.888439-59.903322C828.605807 755.711628 801.786896 728.876446 768.717368 728.876446z"  ></path>' +
    '' +
    '<path d="M839.043968 618.708324 422.079334 618.708324l-143.534952-424.468434c-4.165031-12.376888-15.77288-18.62315-28.844119-18.62315L122.863299 175.61674c-16.80851 0-30.43645 11.838629-30.43645 28.652574 0 16.801664 13.627941 28.652574 30.43645 28.652574l104.965946 0 143.530858 424.450015c4.165031 12.376888 15.77288 18.641569 28.844119 18.641569l438.839746 0c16.80851 0 30.43645-11.833513 30.43645-28.65769C869.480418 630.54286 855.851454 618.708324 839.043968 618.708324z"  ></path>' +
    '' +
    '<path d="M904.318294 288.428062l-516.195732-44.978401c-16.688778-1.456165-25.959298 10.340509-20.618439 26.187429l90.205158 269.994224c5.346999 15.868409 23.418322 30.982642 40.157244 30.982642l376.812507 0c16.745062 0 31.90291-15.763009 33.684561-32.405037l23.035589-215.802998C933.184926 305.774125 921.007072 289.884226 904.318294 288.428062z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-shouji" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M693.706971 9.142857 331.243886 9.142857c-52.737829 0-96.583314 43.600457-96.583314 96.285257l0 813.109029c0 52.964571 43.845486 96.32 96.583314 96.32l362.463086 0c52.756114 0 96.6016-43.355429 96.6016-96.32L790.308571 105.428114C790.308571 52.743314 746.463086 9.142857 693.706971 9.142857zM461.010286 61.494857l104.001829 0c4.805486 0 8.661943 3.876571 8.661943 8.663771 0 4.770743-3.856457 8.663771-8.661943 8.663771l-104.001829 0c-4.770743 0-8.663771-3.893029-8.663771-8.663771C452.344686 65.371429 456.239543 61.494857 461.010286 61.494857zM512.010971 977.325714c-18.205257 0-34.463086-15.012571-34.463086-33.952914s16.257829-34.024229 34.463086-34.024229c19.168914 0 33.952914 15.083886 33.952914 34.024229S531.179886 977.325714 512.010971 977.325714zM718.471314 875.077486 305.409829 875.077486 305.409829 113.003886l413.061486 0L718.471314 875.077486z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-xin" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M512 899.648l-150.08-155.776-204.992-171.52C128.512 548.48 106.112 519.552 89.728 485.568c-16.448-33.92-24.64-70.4-24.64-109.184 0-69.376 24.64-128.768 73.92-178.048 49.28-49.28 108.672-73.92 178.112-73.92 38.848 0 75.264 8.256 109.248 24.704C460.288 165.44 488.832 187.904 512 216.256c23.936-28.352 52.672-50.816 86.336-67.2 33.536-16.448 69.824-24.704 108.608-24.704 69.44 0 128.832 24.704 178.048 73.92 49.344 49.344 73.92 108.672 73.92 178.048 0 68.672-23.488 127.68-70.592 177.024l-221.76 188.224L512 899.648z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-xin1" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M257.283556 655.752296"  ></path>' +
    '' +
    '<path d="M149.084444 333.989926c0 0 88.89837-302.251852 376.619852-54.641778 0 0 288.335407-247.611259 373.677037 68.864 0 0 71.119407 263.137185-373.677037 539.456C525.704296 888.400593 92.18963 629.130667 149.084444 333.989926z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-icondayu" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M298.666667 761.088 298.666667 810.666667l426.666667-257.194667 0-43.392L298.666667 256l0 52.693333 389.034667 223.104L298.666667 761.088z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-dayuhao" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M514.153 744.909c4.851-0.43 9.586-2.499 13.299-6.222l425.558-425.527c8.396-8.406 8.396-22.008 0-30.393-8.396-8.406-21.998-8.406-30.394 0l-410.529 410.499-410.529-410.499c-8.398-8.406-22-8.406-30.394 0-8.398 8.406-8.397 21.987 0 30.393l425.6 425.567c4.756 4.757 11.183 6.813 17.388 6.181z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-yz-search" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M691.881 249.91c-122.036-122.092-319.94-122.092-442.033 0s-122.093 319.997 0 442.033c56.558 56.574 134.7 91.567 221.017 91.567 86.316 0 164.458-34.994 221.016-91.567 56.575-56.558 91.568-134.701 91.568-221.017 0-86.316-34.994-164.458-91.567-221.016zM181.8 759.992c-74.010-73.991-119.787-176.22-119.787-289.14 0-225.802 183.050-408.852 408.852-408.852 225.803 0 408.852 183.050 408.852 408.852 0 112.92-45.778 215.149-119.787 289.139-73.985 73.966-176.183 119.713-289.065 119.713-112.883 0-215.080-45.747-289.065-119.713zM945.517 945.579c-10.099 10.115-24.058 16.372-39.48 16.372s-29.381-6.257-39.479-16.371l-78.903-78.959c-10.097-10.097-16.342-24.045-16.342-39.452 0-30.814 24.98-55.792 55.792-55.792 15.406 0 29.355 6.245 39.452 16.341l78.958 78.903c10.142 10.087 16.418 24.050 16.418 39.479s-6.277 29.393-16.416 39.477z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-daohang" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M130.048 348.16h92.16V256h-92.16v92.16z m212.48-92.16v92.16h552.96V256h-552.96z m-1.536 302.08h552.96V465.92h-552.96v92.16zM220.672 465.92h-92.16v92.16h92.16V465.92z m120.32 302.08h552.96v-92.16h-552.96v92.16z m-210.944 0h92.16v-92.16h-92.16v92.16z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)